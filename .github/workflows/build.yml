name: Build

on:
  push:
  pull_request:

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [aarch64-linux-android, aarch64-unknown-linux-musl, arm-unknown-linux-musleabi, i686-pc-windows-gnu, x86_64-pc-windows-gnu, x86_64-unknown-linux-musl]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build ${{ matrix.target }}
        run: cross build --release --target ${{ matrix.target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: netiso-srv-${{ matrix.target }}
          path: |
            README.md
            target/${{ matrix.target }}/release/netiso-srv*

  trigger_docker:
    name: Trigger docker build
    needs: [build]
    if: ${{ success() && startsWith(github.ref, 'refs/tags/') }}
    uses: ./.github/workflows/docker.yml
    with:
      workflow-run-id: "${{ github.run_id }}"

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ success() && startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Zip up builds
        run: for dir in *; do 7z a "${dir}.zip" "${dir}"; done
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *.zip